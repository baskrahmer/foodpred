# Note: this action is currently not used as training a model requires specialised hardware.
# A conversion to Cloud-based training jobs is sensible precondition.
name: Deploy Environment
description: "Runs environment-specific deployment"

inputs:
  env:
    description: 'The deployment environment (dev/prod)'
    required: true
  role_arn:
    description: 'ARN of the IAM role to assume'
    required: true
  ecr_repository:
    description: 'ECR repo name (look in /terraform/vars/env.vars for dev/prod values)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.role_arn }}
        role-session-name: OIDCSession
        aws-region: eu-central-1

    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      shell: bash
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_repository }}
        IMAGE_TAG: latest
      run: |
        docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG app/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
